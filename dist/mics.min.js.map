{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///mics.min.js","webpack:///webpack/bootstrap f11b09d4bce329eb33c7","webpack:///./index.js"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","create","constructor","value","writable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","mix","mixin","superclass","result","is","classes","indexOf","push","_len","arguments","length","args","Array","_key","isFactory","shift","baseclass","pop","derive","isMixin","class","org","reduce","defineProperties","mixins","Class","bind","_len2","_key2","Function","apply","concat","getOwnPropertyNames","forEach","k","interface","x","getInterface","type","_typeof","f","getPrototypeOf","like","itf","subject","keys","proto","getPropertyNames","results","arr","isClass","toString","test","replace","Symbol","iterator","obj","_superclass","_class"],"mappings":"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","file":"mics.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mix\", function() { return mix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"is\", function() { return is; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"like\", function() { return like; });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n/**\r\n * Accepts an optional superclass as the first argument,\r\n * then a bunch of mixins and an optional class factory as the last argument and returns a mixin.\r\n * Mostly, you will be using mix with a factory to create mixins, like this:\r\n *\r\n * var Looker = mix(superclass => class Looker extends superclass {\r\n *   constructor() {\r\n *     super()\r\n *     console.info('A looker is born!')\r\n *   }\r\n *   look() {\r\n *     console.info('Looking good!')\r\n *   }\r\n * })\r\n *\r\n * @param {function} args\r\n *   Consists of the following three argument groups:\r\n *   {function} superclass (optional)\r\n *   {function} mixins... (0 or more)\r\n *   {function} factory (optional)\r\n * @return {function}\r\n */\nfunction mix() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n    }\n\n    // todo: refactor to make const\n    var superclass = !isFactory(args[0]) && args.shift() || baseclass;\n    var factory = isFactory(args[args.length - 1]) && args.pop() || derive;\n    superclass = isMixin(superclass) ? superclass.class : derive(superclass);\n    if (args.length) factory = function (org) {\n        return function (superclass) {\n            return org(args.reduce(function (s, m) {\n                return m.mixin(s);\n            }, superclass));\n        };\n    }(factory);\n\n    function mixin(superclass) {\n        var result = is(superclass, mixin) ? superclass : factory(superclass);\n        if (mixin.classes.indexOf(result) === -1) mixin.classes.push(result);\n        return result;\n    }\n\n    Object.defineProperties(mixin, {\n        classes: { value: [], writable: false },\n        mixins: { value: args, writable: false }\n    });\n    var Class = mixin(superclass);\n    var constructor = Class.hasOwnProperty('constructor') ? Class.constructor.bind(Class) : function () {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n        }\n\n        return new (Function.prototype.bind.apply(Class, [null].concat(args)))();\n    };\n    Object.getOwnPropertyNames(Class).forEach(function (k) {\n        return Object.defineProperty(constructor, k, { value: Class[k] });\n    });\n    return Object.defineProperties(constructor, {\n        mixin: { value: mixin, writable: false },\n        class: { value: Class, writable: false },\n        interface: { get: function (x) {\n                return function () {\n                    return x ? x : x = getInterface(Class.prototype);\n                };\n            }() }\n    });\n}\n\n/**\r\n * Tests whether `x` is a type or extends from type.\r\n * Example: is(looker, Looker)\r\n *\r\n * @param {object|function} x\r\n * @param {function} type\r\n * @return {boolean}\r\n */\nfunction is(x, type) {\n    if ((typeof x === 'undefined' ? 'undefined' : _typeof(x)) == 'object') {\n        if (x instanceof type) return true;\n        if (type.class && x instanceof type.class) return true;\n        if (type.mixin && type.mixin.classes) return type.mixin.classes.reduce(function (f, c) {\n            return f || is(x, c);\n        }, false);\n    } else if (typeof x == 'function') {\n        if (x.mixin && x.mixin.mixins.indexOf(type) !== -1) return true;\n        var c = x;\n        while (c !== Object) {\n            if (c === type || c === type.class) return true;\n            if (type.mixin && type.mixin.classes && type.mixin.classes.indexOf(c) !== -1) return true;\n            c = Object.getPrototypeOf(c.prototype).constructor;\n        }\n    }\n    return false;\n}\n\n/**\r\n * Often, we don't really care whether the object is a certain type,\r\n * we just want to know whether we can treat it like a certain type.\r\n * Use like(subject, type) to test whether a subject adheres to the same interface as is defined by type\r\n * Example:\r\n *\r\n * var Looker = mix(superclass => class Looker extends superclass {\r\n *   look() {}\r\n * })\r\n *\r\n * var Viewer = {\r\n *   look() {} // same interface as Looker\r\n * }\r\n *\r\n * var viewer = new Viewer()\r\n * like(viewer, Looker) // true\r\n *\r\n * @param {object|function} x\r\n * @param {function} type\r\n * @return {boolean}\r\n */\nfunction like(x, type) {\n    if (is(x, type)) return true;\n    var itf = type.interface || typeof type == 'function' && getInterface(type.prototype);\n    var subject = typeof x == 'function' ? x.interface || getInterface(x.prototype) : x;\n    return itf && Object.keys(itf).reduce(function (f, k) {\n        return f && (typeof itf[k] == 'function' ? typeof subject[k] == 'function' : k in subject);\n    }, true);\n}\n\n/**\r\n * Get all parts of an interface as an array of strings\r\n *\r\n * @param {object} proto\r\n * @return {array<string>}\r\n */\nfunction getInterface(proto) {\n    return getPropertyNames(proto).reduce(function (o, k) {\n        o[k] = proto[k];return o;\n    }, {});\n}\n\n/**\r\n * Get all properties of an object an an array of strings\r\n *\r\n * @param {object|function} proto\r\n * @return {array<string>}\r\n */\nfunction getPropertyNames(proto) {\n    var results = [];\n    while (proto !== Object.prototype) {\n        Object.getOwnPropertyNames(proto).reduce(function (arr, k) {\n            return arr.indexOf(k) === -1 ? arr.push(k) && arr : arr;\n        }, results);\n        proto = Object.getPrototypeOf(proto).constructor.prototype;\n    }\n    return results;\n}\n\nfunction isMixin(x) {\n    return typeof x == 'function' && !!x.mixin;\n}\n\nfunction isClass(x) {\n    if (typeof x != 'function') return false;\n    var s = x.toString();\n    return (/^class\\s/.test(s) || /^.*classCallCheck\\(/.test(s.replace(/^[^{]*{\\s*/, '').replace(/\\s*}[^}]*$/, ''))\n    );\n}\n\nfunction isFactory(x) {\n    return typeof x == 'function' && !isMixin(x) && !isClass(x) && x.length == 1;\n}\n\nvar baseclass = function Object() {\n    _classCallCheck(this, Object);\n};\nvar derive = function derive(superclass) {\n    return {}[superclass.name || 'Object'] = function (_superclass) {\n        _inherits(_class, _superclass);\n\n        function _class() {\n            _classCallCheck(this, _class);\n\n            return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n        }\n\n        return _class;\n    }(superclass);\n};\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// mics.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f11b09d4bce329eb33c7","export { mix, is, like }\r\n\r\n/**\r\n * Accepts an optional superclass as the first argument,\r\n * then a bunch of mixins and an optional class factory as the last argument and returns a mixin.\r\n * Mostly, you will be using mix with a factory to create mixins, like this:\r\n *\r\n * var Looker = mix(superclass => class Looker extends superclass {\r\n *   constructor() {\r\n *     super()\r\n *     console.info('A looker is born!')\r\n *   }\r\n *   look() {\r\n *     console.info('Looking good!')\r\n *   }\r\n * })\r\n *\r\n * @param {function} args\r\n *   Consists of the following three argument groups:\r\n *   {function} superclass (optional)\r\n *   {function} mixins... (0 or more)\r\n *   {function} factory (optional)\r\n * @return {function}\r\n */\r\nfunction mix(...args) {\r\n    // todo: refactor to make const\r\n    let superclass = !isFactory(args[0]) && args.shift() || baseclass\r\n    let factory = (isFactory(args[args.length-1]) && args.pop()) || derive\r\n    superclass = isMixin(superclass) ? superclass.class : derive(superclass)\r\n    if (args.length) factory = (org => superclass => org(args.reduce((s,m) => m.mixin(s), superclass)))(factory)\r\n\r\n    function mixin(superclass) {\r\n        const result = is(superclass, mixin) ? superclass : factory(superclass)\r\n        if (mixin.classes.indexOf(result) === -1) mixin.classes.push(result)\r\n        return result\r\n    }\r\n\r\n    Object.defineProperties(mixin, {\r\n        classes: { value:[], writable:false },\r\n        mixins: { value:args, writable:false },\r\n    })\r\n    const Class = mixin(superclass)\r\n    const constructor = Class.hasOwnProperty('constructor')\r\n        ? Class.constructor.bind(Class)\r\n        : (...args) => new Class(...args)\r\n    Object.getOwnPropertyNames(Class).forEach(k => Object.defineProperty(constructor, k, { value: Class[k] }))\r\n    return Object.defineProperties(constructor, {\r\n        mixin: { value:mixin, writable:false },\r\n        class: { value: Class, writable:false },\r\n        interface: { get:(x => () => x ? x : x = getInterface(Class.prototype))() },\r\n    })\r\n}\r\n\r\n/**\r\n * Tests whether `x` is a type or extends from type.\r\n * Example: is(looker, Looker)\r\n *\r\n * @param {object|function} x\r\n * @param {function} type\r\n * @return {boolean}\r\n */\r\nfunction is(x, type) {\r\n    if (typeof x == 'object') {\r\n        if (x instanceof type) return true\r\n        if (type.class && x instanceof type.class) return true\r\n        if (type.mixin && type.mixin.classes) return type.mixin.classes.reduce((f,c) => f || is(x,c), false)\r\n    }\r\n    else if (typeof x == 'function') {\r\n        if (x.mixin && x.mixin.mixins.indexOf(type) !== -1) return true\r\n        let c = x\r\n        while (c !== Object) {\r\n            if (c === type || c === type.class) return true\r\n            if (type.mixin && type.mixin.classes && type.mixin.classes.indexOf(c) !== -1) return true\r\n            c = Object.getPrototypeOf(c.prototype).constructor\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\n/**\r\n * Often, we don't really care whether the object is a certain type,\r\n * we just want to know whether we can treat it like a certain type.\r\n * Use like(subject, type) to test whether a subject adheres to the same interface as is defined by type\r\n * Example:\r\n *\r\n * var Looker = mix(superclass => class Looker extends superclass {\r\n *   look() {}\r\n * })\r\n *\r\n * var Viewer = {\r\n *   look() {} // same interface as Looker\r\n * }\r\n *\r\n * var viewer = new Viewer()\r\n * like(viewer, Looker) // true\r\n *\r\n * @param {object|function} x\r\n * @param {function} type\r\n * @return {boolean}\r\n */\r\nfunction like(x, type) {\r\n    if (is(x, type)) return true\r\n    const itf = type.interface || ((typeof type == 'function') && getInterface(type.prototype))\r\n    const subject = typeof x == 'function' ? x.interface || getInterface(x.prototype) : x\r\n    return itf && Object.keys(itf).reduce((f, k) => \r\n        f && ((typeof itf[k] == 'function') ? (typeof subject[k] == 'function') : k in subject), true\r\n    )\r\n}\r\n\r\n/**\r\n * Get all parts of an interface as an array of strings\r\n *\r\n * @param {object} proto\r\n * @return {array<string>}\r\n */\r\nfunction getInterface(proto) {\r\n    return getPropertyNames(proto).reduce((o,k) => { o[k] = proto[k]; return o }, {})\r\n}\r\n\r\n/**\r\n * Get all properties of an object an an array of strings\r\n *\r\n * @param {object|function} proto\r\n * @return {array<string>}\r\n */\r\nfunction getPropertyNames(proto) {\r\n    const results = []\r\n    while (proto !== Object.prototype) {\r\n        Object.getOwnPropertyNames(proto).reduce((arr,k) => arr.indexOf(k) === -1 ? arr.push(k) && arr : arr, results)\r\n        proto = Object.getPrototypeOf(proto).constructor.prototype\r\n    }\r\n    return results\r\n}\r\n\r\nfunction isMixin(x) {\r\n    return (typeof x == 'function') && !!x.mixin\r\n}\r\n\r\nfunction isClass(x) {\r\n    if (typeof x != 'function') return false\r\n    const s = x.toString()\r\n    return /^class\\s/.test(s) || /^.*classCallCheck\\(/.test(s.replace(/^[^{]*{\\s*/,'').replace(/\\s*}[^}]*$/,''))\r\n}\r\n\r\nfunction isFactory(x) {\r\n    return (typeof x == 'function') && !isMixin(x) && !isClass(x) && x.length == 1\r\n}\r\n\r\n\r\nconst baseclass = class Object{}\r\nconst derive = superclass => ({}[superclass.name || 'Object'] = class extends superclass {})\r\n\n\n\n// WEBPACK FOOTER //\n// ./index.js"],"sourceRoot":""}