{"version":3,"file":"mics.es.js","sources":["../src/index.js"],"sourcesContent":["export { mix, is, like }\r\n\r\n/**\r\n * Accepts an optional superclass as the first argument,\r\n * then a bunch of mixins and an optional class factory as the last argument and returns a mixin.\r\n * Mostly, you will be using mix with a factory to create mixins, like this:\r\n *\r\n * var Looker = mix(superclass => class Looker extends superclass {\r\n *   constructor() {\r\n *     super()\r\n *     console.info('A looker is born!')\r\n *   }\r\n *   look() {\r\n *     console.info('Looking good!')\r\n *   }\r\n * })\r\n *\r\n * @param {function} args\r\n *   Consists of the following three argument groups:\r\n *   {function} superclass (optional)\r\n *   {function} mixins... (0 or more)\r\n *   {function} factory (optional)\r\n * @return {function}\r\n */\r\nfunction mix(...args) {\r\n    // todo: refactor to make const\r\n    let superclass = !isFactory(args[0]) && args.shift() || baseclass\r\n    let factory = (isFactory(args[args.length-1]) && args.pop()) || derive\r\n    superclass = isMixin(superclass) ? superclass.class : derive(superclass)\r\n    if (args.length) factory = (org => superclass => org(args.reduce((s,m) => m.mixin(s), superclass)))(factory)\r\n\r\n    function mixin(superclass) {\r\n        const result = is(superclass, mixin) ? superclass : factory(superclass)\r\n        if (mixin.classes.indexOf(result) === -1) mixin.classes.push(result)\r\n        return result\r\n    }\r\n\r\n    Object.defineProperties(mixin, {\r\n        classes: { value:[], writable:false },\r\n        mixins: { value:args, writable:false },\r\n    })\r\n    const Class = mixin(superclass)\r\n    const constructor = Class.hasOwnProperty('constructor')\r\n        ? Class.constructor.bind(Class)\r\n        : (...args) => new Class(...args)\r\n    Object.getOwnPropertyNames(Class).forEach(k => Object.defineProperty(constructor, k, { value: Class[k] }))\r\n    return Object.defineProperties(constructor, {\r\n        mixin: { value:mixin, writable:false },\r\n        class: { value: Class, writable:false },\r\n        interface: { get:(x => () => x ? x : x = getInterface(Class.prototype))() },\r\n    })\r\n}\r\n\r\n/**\r\n * Tests whether `x` is a type or extends from type.\r\n * Example: is(looker, Looker)\r\n *\r\n * @param {object|function} x\r\n * @param {function} type\r\n * @return {boolean}\r\n */\r\nfunction is(x, type) {\r\n    if (typeof x == 'object') {\r\n        if (x instanceof type) return true\r\n        if (type.class && x instanceof type.class) return true\r\n        if (type.mixin && type.mixin.classes) return type.mixin.classes.reduce((f,c) => f || is(x,c), false)\r\n    }\r\n    else if (typeof x == 'function') {\r\n        if (x.mixin && x.mixin.mixins.indexOf(type) !== -1) return true\r\n        let c = x\r\n        while (c !== Object) {\r\n            if (c === type || c === type.class) return true\r\n            if (type.mixin && type.mixin.classes && type.mixin.classes.indexOf(c) !== -1) return true\r\n            c = Object.getPrototypeOf(c.prototype).constructor\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\n/**\r\n * Often, we don't really care whether the object is a certain type,\r\n * we just want to know whether we can treat it like a certain type.\r\n * Use like(subject, type) to test whether a subject adheres to the same interface as is defined by type\r\n * Example:\r\n *\r\n * var Looker = mix(superclass => class Looker extends superclass {\r\n *   look() {}\r\n * })\r\n *\r\n * var Viewer = {\r\n *   look() {} // same interface as Looker\r\n * }\r\n *\r\n * var viewer = new Viewer()\r\n * like(viewer, Looker) // true\r\n *\r\n * @param {object|function} x\r\n * @param {function} type\r\n * @return {boolean}\r\n */\r\nfunction like(x, type) {\r\n    if (is(x, type)) return true\r\n    const itf = type.interface || ((typeof type == 'function') && getInterface(type.prototype))\r\n    const subject = typeof x == 'function' ? x.interface || getInterface(x.prototype) : x\r\n    return itf && Object.keys(itf).reduce((f, k) => \r\n        f && ((typeof itf[k] == 'function') ? (typeof subject[k] == 'function') : k in subject), true\r\n    )\r\n}\r\n\r\n/**\r\n * Get all parts of an interface as an array of strings\r\n *\r\n * @param {object} proto\r\n * @return {array<string>}\r\n */\r\nfunction getInterface(proto) {\r\n    return getPropertyNames(proto).reduce((o,k) => { o[k] = proto[k]; return o }, {})\r\n}\r\n\r\n/**\r\n * Get all properties of an object an an array of strings\r\n *\r\n * @param {object|function} proto\r\n * @return {array<string>}\r\n */\r\nfunction getPropertyNames(proto) {\r\n    const results = []\r\n    while (proto !== Object.prototype) {\r\n        Object.getOwnPropertyNames(proto).reduce((arr,k) => arr.indexOf(k) === -1 ? arr.push(k) && arr : arr, results)\r\n        proto = Object.getPrototypeOf(proto).constructor.prototype\r\n    }\r\n    return results\r\n}\r\n\r\nfunction isMixin(x) {\r\n    return (typeof x == 'function') && !!x.mixin\r\n}\r\n\r\nfunction isClass(x) {\r\n    if (typeof x != 'function') return false\r\n    const s = x.toString()\r\n    return /^class\\s/.test(s) || /^.*classCallCheck\\(/.test(s.replace(/^[^{]*{\\s*/,'').replace(/\\s*}[^}]*$/,''))\r\n}\r\n\r\nfunction isFactory(x) {\r\n    return (typeof x == 'function') && !isMixin(x) && !isClass(x) && x.length == 1\r\n}\r\n\r\n\r\nconst baseclass = class Object{}\r\nconst derive = superclass => ({}[superclass.name || 'Object'] = class extends superclass {})\r\n"],"names":["mix","args","superclass","isFactory","shift","baseclass","factory","length","pop","derive","isMixin","class","org","reduce","s","m","mixin","result","is","classes","indexOf","push","defineProperties","value","writable","Class","constructor","hasOwnProperty","bind","getOwnPropertyNames","forEach","Object","defineProperty","k","get","x","getInterface","prototype","type","f","c","mixins","getPrototypeOf","like","itf","interface","subject","keys","proto","getPropertyNames","o","results","arr","isClass","toString","test","replace","name"],"mappings":"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"}